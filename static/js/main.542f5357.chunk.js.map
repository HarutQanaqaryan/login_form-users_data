{"version":3,"sources":["components/get_users.jsx","components/sign_up.jsx","App.js","reportWebVitals.js","index.js"],"names":["Users","useState","users","setUsers","rezervUsers","setRezervUsers","inputValue","setInputValue","isRezervUsers","setIsrezervUsers","useEffect","fetch","then","responce","json","data","catch","e","console","log","map","item","username","TextField","variant","type","onChange","value","target","label","className","name","email","phone","website","id","SignUp","isModal","setIsModal","text","isValid","login","setLogin","password","setPassword","setEmail","setPhone","isDisabled","setIsDisabled","firstRender","useRef","pattern","validationTextField","password1","password2","test","handleInput","checkPattern","current","error","helperText","style","width","disabled","onClick","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.542f5357.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport \"./styles.css\";\r\n\r\nexport const Users = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [rezervUsers, setRezervUsers] = useState([]);\r\n  const [inputValue, setInputValue] = useState();\r\n  const [isRezervUsers, setIsrezervUsers] = useState(false);\r\n  useEffect(() => {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users/\")\r\n      .then((responce) => responce.json())\r\n      .then((data) => {\r\n        setUsers(data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n   return users.map((item) => {\r\n      if (item.username === inputValue) {\r\n        setRezervUsers([item]);\r\n        setIsrezervUsers(true);\r\n      } else if( inputValue === \"\") {\r\n        setIsrezervUsers(false)\r\n        setRezervUsers([])\r\n      }\r\n    });\r\n  }, [users, inputValue]);\r\n\r\n  return (\r\n    <div>\r\n      <h3>Users</h3>\r\n      <TextField variant=\"outlined\" type=\"search\" onChange={({ target: { value }}) => setInputValue( value )} label=\"Search by username\" />\r\n      <div className=\"users-container\">\r\n        {!isRezervUsers\r\n          ? users.map((item) => {\r\n              return (\r\n                <div className=\"user-cart\" key={item.id}>\r\n                  <p>\r\n                    <span className=\"user-info\">Name:</span> {item.name}\r\n                  </p>\r\n                  <p>\r\n                    <span className=\"user-info\">Username:</span> {item.username}\r\n                  </p>\r\n                  <p>\r\n                    <span className=\"user-info\">Email:</span> {item.email}\r\n                  </p>\r\n                  <p>\r\n                    <span className=\"user-info\">Phone:</span> {item.phone}\r\n                  </p>\r\n                  <p>\r\n                    <span className=\"user-info\">Web-site:</span> {item.website}\r\n                  </p>\r\n                </div>\r\n              );\r\n            })\r\n          : rezervUsers.map((item) => {\r\n              return (\r\n                <div className=\"user-cart\" key={item.id}>\r\n                  <p>\r\n                    <span className=\"user-info\">Name:</span> {item.name}\r\n                  </p>\r\n                  <p>\r\n                    <span className=\"user-info\">Username:</span> {item.username}\r\n                  </p>\r\n                  <p>\r\n                    <span className=\"user-info\">Email:</span> {item.email}\r\n                  </p>\r\n                  <p>\r\n                    <span className=\"user-info\">Phone:</span> {item.phone}\r\n                  </p>\r\n                  <p>\r\n                    <span className=\"user-info\">Web-site:</span> {item.website}\r\n                  </p>\r\n                </div>\r\n              );\r\n            })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport \"./styles.css\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { Users } from \"./get_users\";\r\n\r\nexport const SignUp = () => {\r\n  const [isModal, setIsModal] = useState(true);\r\n  const [login, setLogin] = useState({ text: \"\", isValid: false });\r\n  const [password, setPassword] = useState({ text: \"\", isValid: false });\r\n  const [email, setEmail] = useState({ text: \"\", isValid: false });\r\n  const [phone, setPhone] = useState({ text: \"\", isValid: false });\r\n  const [isDisabled, setIsDisabled] = useState(true);\r\n  const firstRender = useRef(true);\r\n  let pattern = \"\";\r\n\r\n  const validationTextField = (value, pattern, password1, password2) => {\r\n    return !pattern.test(value) ? true : false;\r\n  };\r\n\r\n  const checkPattern = (name) => {\r\n    switch (name) {\r\n      case \"login\":\r\n        pattern = /^[a-zA-Z]{3,15}$/;\r\n        break;\r\n      case \"password\":\r\n        pattern = /^[a-zA-Z0-9_-]{6,18}$/;\r\n        break;\r\n      case \"email\":\r\n        pattern = /^[\\w-/.]+@[\\w-]+\\.[a-z]{2,4}$/i;\r\n        break;\r\n      case \"phone\":\r\n        pattern = /^\\+7\\d*$/;\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleInput = ({ target: { value, name } }) => {\r\n    checkPattern(name);\r\n    switch (name) {\r\n      case \"login\":\r\n        setLogin({ text: value, isValid: validationTextField(value, pattern) });\r\n        break;\r\n      case \"password\":\r\n        setPassword({\r\n          text: value,\r\n          isValid: validationTextField(value, pattern),\r\n        });\r\n        break;\r\n      case \"email\":\r\n        setEmail({ text: value, isValid: validationTextField(value, pattern) });\r\n        break;\r\n      case \"phone\":\r\n        setPhone({ text: value, isValid: validationTextField(value, pattern) });\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const disabledBtn = () => {\r\n    if (login.isValid === true || login.text === \"\") {\r\n      setIsDisabled(true);\r\n    } else if (password.isValid === true || password.text === \"\") {\r\n      setIsDisabled(true);\r\n    } else if (email.isValid === true || email.text === \"\") {\r\n      setIsDisabled(true);\r\n    } else if (phone.isValid === true || phone.text === \"\") {\r\n      setIsDisabled(true);\r\n    } else {\r\n      setIsDisabled(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (firstRender.current) {\r\n      firstRender.current = false;\r\n      return;\r\n    }\r\n    disabledBtn();\r\n  });\r\n  return (\r\n    <div>\r\n     {isModal && <div className=\"sign-up-container\">\r\n        <h2 className=\"header\">Please log in to see users</h2>\r\n        <span className=\"login\">\r\n          <TextField\r\n            error={login.isValid}\r\n            name=\"login\"\r\n            label=\"Login\"\r\n            variant=\"outlined\"\r\n            helperText={login.isValid ? \"login must consist of 3-15 characters and only Latin letters\" : \"\"}\r\n            style={{ width: \"100%\" }}\r\n            value={login.text}\r\n            onChange={handleInput}\r\n          />\r\n        </span>\r\n        <span className=\"password\">\r\n          <TextField\r\n            error={password.isValid && true}\r\n            name=\"password\"\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            variant=\"outlined\"\r\n            helperText={password.isValid ? \"The password must be 6-18 characters long and only Latin letters\" : \"\"}\r\n            style={{ width: \"100%\" }}\r\n            value={password.text}\r\n            onChange={handleInput}\r\n          />\r\n        </span>\r\n        <span className=\"email\">\r\n          <TextField\r\n            error={email.isValid && true}\r\n            name=\"email\"\r\n            label=\"E-mail\"\r\n            variant=\"outlined\"\r\n            helperText={email.isValid ? \"Mail should look like this: johnsmith@gmail.com\" : \"\"}\r\n            style={{ width: \"100%\" }}\r\n            value={email.text}\r\n            onChange={handleInput}\r\n          />\r\n        </span>\r\n\r\n        <div className=\"phone\">\r\n          <TextField\r\n            error={phone.isValid && true}\r\n            name=\"phone\"\r\n            label=\"Phone\"\r\n            variant=\"outlined\"\r\n            helperText={phone.isValid ? \"Phone should look like this: +7 1002007474\" : \"\"}\r\n            style={{ width: \"100%\" }}\r\n            onChange={handleInput}\r\n          />\r\n        </div>\r\n        <button disabled={isDisabled && true} className=\"button\" onClick={() => setIsModal(false)}>\r\n          Sign Up\r\n        </button>\r\n      </div>}\r\n      {!isModal && <Users />}\r\n    </div>\r\n  );\r\n};\r\n","import './App.css';\nimport { SignUp } from './components/sign_up';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n       <SignUp />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}